name: Check & Publish

on:
  release:
    types: [released, prereleased]
  push:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.release.target_commitish }}

      - uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Configure git and npm creds
        run: |
          git config --global user.name "mintbaseteam"
          git config --global user.email "eng@mintbase.io"
          npm config set '//registry.npmjs.org/:_authToken' "${{ secrets.NPM_MINTBASEJS_AUTH_TOKEN }}"

      - name: Build & Test
        run: |
          echo NEAR_NETWORK=testnet >> .env
          echo NFT_CONTRACT_ID=default_contract >> .env
          npm i
          npm run bootstrap
          npm run lint
          npm run build
          npm run test

      - name: Aggregate LCOV results
        uses: RauliL/lerna-lcov-aggregate-action@master

      - name: Coveralls
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Deployment Status
        uses: altinukshini/deployment-action@releases/v1
        id: deployment
        with:
          token: "${{ github.token }}"
          target_url: https://www.npmjs.com/settings/mintbase-js/packages
          environment: production

      - name: Get tag
        id: tag
        uses: dawidd6/action-get-tag@v1

      - name: Publish Push Commit Preview
        if: ${{ github.event.head_commit.message && !steps.tag.outputs.tag }}
        run: |
          lerna version prerelease --yes --skip-git --preid ${{ github.ref_name }}
          git add --all
          git commit -m "ğŸ¤– npm publish version $(cat ./lerna.json | grep version | head -1 | awk -F: '{ print $2 }' | sed 's/[",]//g')"
          lerna publish from-package --yes --dist-tag prerelease
          git push

      - name: Publish Github Pre/Release
        if: ${{ steps.tag.outputs.tag }}
        env:
          github-token: ${{ secrets.GITHUB_TOKEN }}
        run: |
          lerna version ${{ steps.tag.outputs.tag }} --yes --skip-git
          git add --all
          git commit -m "ğŸ¤– Release ${{ steps.tag.outputs.tag }}"
          lerna publish from-package --yes --dist-tag ${{ github.event.action == 'released' && 'released' || 'prerelease'}}
          git push

      - name: Update deployment status (success)
        if: success()
        uses: altinukshini/deployment-status@releases/v1
        with:
          token: "${{ github.token }}"
          target_url: https://www.npmjs.com/settings/mintbase-js/packages
          state: "success"
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}

      - name: Update deployment status (failure)
        if: failure()
        uses: altinukshini/deployment-status@releases/v1
        with:
          token: "${{ github.token }}"
          target_url: https://www.npmjs.com/settings/mintbase-js/packages
          state: "failure"
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}