name: Push & Publish

on:
  push

jobs:
  build:
    name: 'Build Test & Lerna Publish'
    runs-on: ubuntu-latest
    # dont run this when the actor is mintbase team (automatic push from this script)
    if: ${{ github.actor != 'mintbaseteam' }}
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.TEAM_PAT }}
          ref: ${{ github.event.release.target_commitish }}

      - uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Configure git and npm creds
        run: |
          git config --global user.name "mintbaseteam"
          git config --global user.email "eng@mintbase.io"
          npm config set '//registry.npmjs.org/:_authToken' "${{ secrets.NPM_MINTBASEJS_AUTH_TOKEN }}"

      - name: Build & Test
        run: |
          echo NEAR_NETWORK=testnet >> .env
          echo NFT_CONTRACT_ID=default_contract >> .env
          npm i
          npm run bootstrap
          npm run lint
          npm run build
          npm run test

      - name: Aggregate LCOV results
        uses: RauliL/lerna-lcov-aggregate-action@master

      - name: Coveralls
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish, Version & Push
        # only publish and push
        if: ${{ github.ref_name == 'alpha'}}
        run: |
          lerna version prerelease --yes --skip-git --preid ${{ github.ref_name }}
          git add --all
          git commit -m "ðŸ¤– npm prerelease ${{ github.ref_name }}"
          lerna publish from-package --yes --dist-tag ${{ github.event.action == 'released' && 'latest' || 'prerelease'}}
          git push --force
          exit_with_success

      - name: Deployment Status
        # if: ${{ github.ref_name != 'alpha'}}
        uses: altinukshini/deployment-action@releases/v1
        id: deployment
        with:
          token: "${{ github.token }}"
          target_url: https://www.npmjs.com/settings/mintbase-js/packages
          environment: production

      - name: Publish Preview Version
        # if: ${{ github.ref_name != 'alpha'}}
        run: |
          lerna version prerelease --yes --skip-git --preid ${{ github.ref_name }}-${GITHUB_SHA::7}
          git add --all
          git commit -m "ðŸ¤– npm prerelease ${{ github.ref_name }}"
          lerna publish from-package --yes --dist-tag ${{ github.event.action == 'released' && 'latest' || 'prerelease'}}

      - name: Update deployment status (success)
        # if: success() && ${{ github.ref_name != 'alpha'}}
        uses: altinukshini/deployment-status@releases/v1
        with:
          token: "${{ github.token }}"
          target_url: https://www.npmjs.com/settings/mintbase-js/packages
          state: "success"
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}

      - name: Update deployment status (failure)
        if: failure() && ${{ github.ref_name != 'alpha'}}
        uses: altinukshini/deployment-status@releases/v1
        with:
          token: "${{ github.token }}"
          target_url: https://www.npmjs.com/settings/mintbase-js/packages
          state: "failure"